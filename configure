#!/bin/bash

showhelp()
{
cat << ENDHELP

usage: configure [options]
Configure Control Center

Options:
    --scheme=<build_scheme>
        Builds Control Center with specified build scheme. Supported schemes is: master, dev, branch. Default: master

    --no-debian
        Disables build of deb file

    --maintainer=<name>
        Name of package maintainer

    --maintainer-email=<email>
        Email of package maintainer email. Appropriate GPG key should exist in the system

    --version-postfix=<postfix>
        Place an extra version number of debian package

    --debian-release=<codename>
        Codename of target Debian/Ubuntu release

    --help
    Display this help screen
ENDHELP
}

name_prefix=control-center
scheme="master"
branch=`git branch | grep \* | cut -d ' ' -f2`
maintainer="Subutai Social"
maintainer_email="jenkins@subut.ai"
build_deb=1
prefix=/usr
debian_release=trusty
version_postfix=

while [ $# -ge 1 ]; do
    case "$1" in
        --scheme=*)
            scheme="`echo ${1} | awk '{print substr($0,10)}'`" ;;
        --maintainer=*)
            maintainer="`echo ${1} | awk '{print substr($0,14)}'`" ;;
        --maintainer-email=*)
            maintainer_email="`echo ${1} | awk '{print substr($0,20)}'`" ;;
        --no-debian)
            build_deb=0 ;;
        --debian-release=*)
            debian_release="`echo ${1} | awk '{print substr($0,18)}'`" ;;
        --version-postfix=*)
            version_postfix=-"`echo ${1} | awk '{print substr($0,19)}'`" ;;
        --help)
            showhelp
            exit 0
            ;;
        --build=*) ;;
        --prefix=*)
            prefix=`echo ${1} | awk '{print substr($0,10)}'`
            ;;
        --includedir=*) ;;
        --mandir=*) ;;
        --infodir=*) ;;
        --sysconfdir=*) ;;
        --localstatedir=*) ;;
        --disable-silent-rules) ;;
        --libdir=*) ;;
        --libexecdir=*) ;;
        --disable-maintainer-mode) ;;
        --disable-dependency-tracking) ;;
        *)
            echo "ERROR: Unknown argument: $1"
            showhelp
            exit 1
            ;;
    esac

    shift
done

echo "Preparing $scheme build"

if [ "$scheme" == "branch" ]; then
    # Configure output binary name
    echo "Current branch is $branch"
    if [ "$branch" != "master" ]; then
        name_base="$name_prefix-$branch"
    fi
elif [ "$scheme" == "dev" ]; then
    name_base="$name_prefix-dev"
elif [ "$scheme" == "master" ]; then
    name_base="$name_prefix"
else
    echo "ERROR! $scheme scheme is not supported"
    showhelp
    exit 1
fi
echo "Building $name_base"

# Configure Debian packager
echo "checking debuild"
which debuild
if [ $? != 0 ]; then
    echo "debuild was not found"
elif [ $build_deb == 0 ]; then
    echo "skipping deb package"
else
    if [ "$maintainer" == "" ]; then
        echo "Maintainer name should not be empty"
        showhelp
        exit 1
    fi
    echo "Checking GPG"
    gpg_bin=`which gpg`
    if [ $? != 0 ]; then
        echo "GPG is not installed on this computer. Aborting"
        exit 2
    fi
    echo "Checking GPG key"
    key=`gpg --list-keys "$maintainer_email"`
    if [ $? != 0 ]; then
        echo "Failed to find GPG key for $maintainer_email"
        exit 2
    fi
    # Preparing changelog
    rm -f changelog
    started=0
    while IFS='' read -r line || [[ -n "$line" ]]; do
        st=${line:0:2}
        if [ "$st" == "##" ]; then
            if [ $started -eq 1 ]; then
                date_formatted=`date -d"$release_date" "+%a, %d %b %Y %H:%M:%S %z"`
                echo "" >> changelog
                echo " -- $maintainer <$maintainer_email>  $date_formatted" >> changelog
                echo "" >> changelog
                started=0
            fi
            started=1
            release_date=`echo $line | cut -d "]" -f2 | sed -e 's/^[[:space:]]*//'`
            version_num=`echo $line | cut -d "[" -f2 | cut -d "]" -f1`
            echo "subutai-$name_base ($version_num$version_postfix-0ubuntu1~$debian_release) $debian_release; urgency=medium" >> changelog
            echo "" >> changelog
        elif [ "$st" == "* " ]; then
            echo "  $line" >> changelog
        fi
    done < CHANGELOG
    if [ $started -eq 1 ]; then
        date_formatted=`date -d"$release_date" "+%a, %d %b %Y %H:%M:%S %z"`
        echo "" >> changelog
        echo " -- $maintainer <$maintainer_email>  $date_formatted" >> changelog
        echo "" >> changelog
        started=0
    fi
    mv changelog deb-packages/deb-packages-internal/debian
fi
